/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "k8s.io/api/coordination/v1alpha1"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/listers"
	"k8s.io/client-go/tools/cache"
)

// IdentityLeaseLister helps list IdentityLeases.
// All objects returned here must be treated as read-only.
type IdentityLeaseLister interface {
	// List lists all IdentityLeases in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.IdentityLease, err error)
	// IdentityLeases returns an object that can list and get IdentityLeases.
	IdentityLeases(namespace string) IdentityLeaseNamespaceLister
	IdentityLeaseListerExpansion
}

// identityLeaseLister implements the IdentityLeaseLister interface.
type identityLeaseLister struct {
	listers.ResourceIndexer[*v1alpha1.IdentityLease]
}

// NewIdentityLeaseLister returns a new IdentityLeaseLister.
func NewIdentityLeaseLister(indexer cache.Indexer) IdentityLeaseLister {
	return &identityLeaseLister{listers.New[*v1alpha1.IdentityLease](indexer, v1alpha1.Resource("identitylease"))}
}

// IdentityLeases returns an object that can list and get IdentityLeases.
func (s *identityLeaseLister) IdentityLeases(namespace string) IdentityLeaseNamespaceLister {
	return identityLeaseNamespaceLister{listers.NewNamespaced[*v1alpha1.IdentityLease](s.ResourceIndexer, namespace)}
}

// IdentityLeaseNamespaceLister helps list and get IdentityLeases.
// All objects returned here must be treated as read-only.
type IdentityLeaseNamespaceLister interface {
	// List lists all IdentityLeases in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.IdentityLease, err error)
	// Get retrieves the IdentityLease from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.IdentityLease, error)
	IdentityLeaseNamespaceListerExpansion
}

// identityLeaseNamespaceLister implements the IdentityLeaseNamespaceLister
// interface.
type identityLeaseNamespaceLister struct {
	listers.ResourceIndexer[*v1alpha1.IdentityLease]
}
