/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

// NonTerminatingProbeApplyConfiguration represents an declarative configuration of the NonTerminatingProbe type for use
// with apply.
type NonTerminatingProbeApplyConfiguration struct {
	ProbeCommonApplyConfiguration `json:",inline"`
}

// NonTerminatingProbeApplyConfiguration constructs an declarative configuration of the NonTerminatingProbe type for use with
// apply.
func NonTerminatingProbe() *NonTerminatingProbeApplyConfiguration {
	return &NonTerminatingProbeApplyConfiguration{}
}

// WithExec sets the Exec field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Exec field is set to the value of the last call.
func (b *NonTerminatingProbeApplyConfiguration) WithExec(value *ExecActionApplyConfiguration) *NonTerminatingProbeApplyConfiguration {
	b.Exec = value
	return b
}

// WithHTTPGet sets the HTTPGet field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the HTTPGet field is set to the value of the last call.
func (b *NonTerminatingProbeApplyConfiguration) WithHTTPGet(value *HTTPGetActionApplyConfiguration) *NonTerminatingProbeApplyConfiguration {
	b.HTTPGet = value
	return b
}

// WithTCPSocket sets the TCPSocket field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the TCPSocket field is set to the value of the last call.
func (b *NonTerminatingProbeApplyConfiguration) WithTCPSocket(value *TCPSocketActionApplyConfiguration) *NonTerminatingProbeApplyConfiguration {
	b.TCPSocket = value
	return b
}

// WithGRPC sets the GRPC field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the GRPC field is set to the value of the last call.
func (b *NonTerminatingProbeApplyConfiguration) WithGRPC(value *GRPCActionApplyConfiguration) *NonTerminatingProbeApplyConfiguration {
	b.GRPC = value
	return b
}

// WithInitialDelaySeconds sets the InitialDelaySeconds field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the InitialDelaySeconds field is set to the value of the last call.
func (b *NonTerminatingProbeApplyConfiguration) WithInitialDelaySeconds(value int32) *NonTerminatingProbeApplyConfiguration {
	b.InitialDelaySeconds = &value
	return b
}

// WithTimeoutSeconds sets the TimeoutSeconds field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the TimeoutSeconds field is set to the value of the last call.
func (b *NonTerminatingProbeApplyConfiguration) WithTimeoutSeconds(value int32) *NonTerminatingProbeApplyConfiguration {
	b.TimeoutSeconds = &value
	return b
}

// WithPeriodSeconds sets the PeriodSeconds field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the PeriodSeconds field is set to the value of the last call.
func (b *NonTerminatingProbeApplyConfiguration) WithPeriodSeconds(value int32) *NonTerminatingProbeApplyConfiguration {
	b.PeriodSeconds = &value
	return b
}

// WithSuccessThreshold sets the SuccessThreshold field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the SuccessThreshold field is set to the value of the last call.
func (b *NonTerminatingProbeApplyConfiguration) WithSuccessThreshold(value int32) *NonTerminatingProbeApplyConfiguration {
	b.SuccessThreshold = &value
	return b
}

// WithFailureThreshold sets the FailureThreshold field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the FailureThreshold field is set to the value of the last call.
func (b *NonTerminatingProbeApplyConfiguration) WithFailureThreshold(value int32) *NonTerminatingProbeApplyConfiguration {
	b.FailureThreshold = &value
	return b
}
