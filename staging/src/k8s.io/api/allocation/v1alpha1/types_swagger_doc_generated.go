/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

package v1alpha1

// This file contains a collection of methods that can be used from go-restful to
// generate Swagger API documentation for its models. Please read this PR for more
// information on the implementation: https://github.com/emicklei/go-restful/pull/215
//
// TODOs are ignored from the parser (e.g. TODO(andronat):... || TODO:...) if and only if
// they are on one line! For multiple line or blocks that you want to ignore use ---.
// Any context after a --- is ignored.
//
// Those methods can be generated by using hack/update-generated-swagger-docs.sh

// AUTO-GENERATED FUNCTIONS START HERE. DO NOT EDIT.
var map_IPAddress = map[string]string{
	"": "IPAddress represents an IP used by Kubernetes associated to an IPRange. The name of the object is canonicalized to the RFC5952 IP address format. xref: https://tools.ietf.org/html/rfc5952",
}

func (IPAddress) SwaggerDoc() map[string]string {
	return map_IPAddress
}

var map_IPAddressList = map[string]string{
	"": "IPAddressList contains a list of IPAddress.",
}

func (IPAddressList) SwaggerDoc() map[string]string {
	return map_IPAddressList
}

var map_IPAddressSpec = map[string]string{
	"":           "IPAddressSpec describe the attributes in an IP Address,",
	"ipRangeRef": "IPRangeRef references the IPRange associated to this IP Address. All IP addresses has to be associated to one IPRange allocator.",
}

func (IPAddressSpec) SwaggerDoc() map[string]string {
	return map_IPAddressSpec
}

var map_IPAddressStatus = map[string]string{
	"": "IPAddressStatus defines the observed state of IPAddress.",
}

func (IPAddressStatus) SwaggerDoc() map[string]string {
	return map_IPAddressStatus
}

var map_IPRange = map[string]string{
	"": "IPRange defines a range of IPs using CIDR format (192.168.0.0/24 or 2001:db2::0/64).",
}

func (IPRange) SwaggerDoc() map[string]string {
	return map_IPRange
}

var map_IPRangeList = map[string]string{
	"": "IPRangeList contains a list of IPRange objects.",
}

func (IPRangeList) SwaggerDoc() map[string]string {
	return map_IPRangeList
}

var map_IPRangeRef = map[string]string{
	"":         "IPRangeRef contains information that points to the IPRange being used so we can validate it",
	"apiGroup": "APIGroup is the group for the resource being referenced",
	"kind":     "Kind is the type of resource being referenced",
	"name":     "Name is the name of resource being referenced",
}

func (IPRangeRef) SwaggerDoc() map[string]string {
	return map_IPRangeRef
}

var map_IPRangeSpec = map[string]string{
	"":        "IPRangeSpec describe how the IPRange's specification looks like.",
	"range":   "Range of IPs in CIDR format (192.168.0.0/24 or 2001:db2::0/64).",
	"primary": "Primary indicates if this is the primary allocator to be used by the apiserver to allocate IP addresses. NOTE this can simplify the Service strategy logic so we don't have to infer the primary allocator, it also may allow to switch between primary families in a cluster, but this looks like a loooong shot.",
}

func (IPRangeSpec) SwaggerDoc() map[string]string {
	return map_IPRangeSpec
}

var map_IPRangeStatus = map[string]string{
	"":     "IPRangeStatus defines the observed state of IPRange.",
	"free": "Free represent the number of IP addresses that are not allocated in the Range.",
}

func (IPRangeStatus) SwaggerDoc() map[string]string {
	return map_IPRangeStatus
}

// AUTO-GENERATED FUNCTIONS END HERE
