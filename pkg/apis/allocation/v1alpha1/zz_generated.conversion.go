// +build !ignore_autogenerated

/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by conversion-gen. DO NOT EDIT.

package v1alpha1

import (
	unsafe "unsafe"

	v1alpha1 "k8s.io/api/allocation/v1alpha1"
	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
	allocation "k8s.io/kubernetes/pkg/apis/allocation"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(s *runtime.Scheme) error {
	if err := s.AddGeneratedConversionFunc((*v1alpha1.IPAddress)(nil), (*allocation.IPAddress)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_IPAddress_To_allocation_IPAddress(a.(*v1alpha1.IPAddress), b.(*allocation.IPAddress), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*allocation.IPAddress)(nil), (*v1alpha1.IPAddress)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_allocation_IPAddress_To_v1alpha1_IPAddress(a.(*allocation.IPAddress), b.(*v1alpha1.IPAddress), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha1.IPAddressList)(nil), (*allocation.IPAddressList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_IPAddressList_To_allocation_IPAddressList(a.(*v1alpha1.IPAddressList), b.(*allocation.IPAddressList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*allocation.IPAddressList)(nil), (*v1alpha1.IPAddressList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_allocation_IPAddressList_To_v1alpha1_IPAddressList(a.(*allocation.IPAddressList), b.(*v1alpha1.IPAddressList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha1.IPAddressSpec)(nil), (*allocation.IPAddressSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_IPAddressSpec_To_allocation_IPAddressSpec(a.(*v1alpha1.IPAddressSpec), b.(*allocation.IPAddressSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*allocation.IPAddressSpec)(nil), (*v1alpha1.IPAddressSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_allocation_IPAddressSpec_To_v1alpha1_IPAddressSpec(a.(*allocation.IPAddressSpec), b.(*v1alpha1.IPAddressSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha1.IPAddressStatus)(nil), (*allocation.IPAddressStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_IPAddressStatus_To_allocation_IPAddressStatus(a.(*v1alpha1.IPAddressStatus), b.(*allocation.IPAddressStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*allocation.IPAddressStatus)(nil), (*v1alpha1.IPAddressStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_allocation_IPAddressStatus_To_v1alpha1_IPAddressStatus(a.(*allocation.IPAddressStatus), b.(*v1alpha1.IPAddressStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha1.IPRange)(nil), (*allocation.IPRange)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_IPRange_To_allocation_IPRange(a.(*v1alpha1.IPRange), b.(*allocation.IPRange), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*allocation.IPRange)(nil), (*v1alpha1.IPRange)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_allocation_IPRange_To_v1alpha1_IPRange(a.(*allocation.IPRange), b.(*v1alpha1.IPRange), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha1.IPRangeList)(nil), (*allocation.IPRangeList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_IPRangeList_To_allocation_IPRangeList(a.(*v1alpha1.IPRangeList), b.(*allocation.IPRangeList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*allocation.IPRangeList)(nil), (*v1alpha1.IPRangeList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_allocation_IPRangeList_To_v1alpha1_IPRangeList(a.(*allocation.IPRangeList), b.(*v1alpha1.IPRangeList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha1.IPRangeRef)(nil), (*allocation.IPRangeRef)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_IPRangeRef_To_allocation_IPRangeRef(a.(*v1alpha1.IPRangeRef), b.(*allocation.IPRangeRef), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*allocation.IPRangeRef)(nil), (*v1alpha1.IPRangeRef)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_allocation_IPRangeRef_To_v1alpha1_IPRangeRef(a.(*allocation.IPRangeRef), b.(*v1alpha1.IPRangeRef), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha1.IPRangeSpec)(nil), (*allocation.IPRangeSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_IPRangeSpec_To_allocation_IPRangeSpec(a.(*v1alpha1.IPRangeSpec), b.(*allocation.IPRangeSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*allocation.IPRangeSpec)(nil), (*v1alpha1.IPRangeSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_allocation_IPRangeSpec_To_v1alpha1_IPRangeSpec(a.(*allocation.IPRangeSpec), b.(*v1alpha1.IPRangeSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha1.IPRangeStatus)(nil), (*allocation.IPRangeStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_IPRangeStatus_To_allocation_IPRangeStatus(a.(*v1alpha1.IPRangeStatus), b.(*allocation.IPRangeStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*allocation.IPRangeStatus)(nil), (*v1alpha1.IPRangeStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_allocation_IPRangeStatus_To_v1alpha1_IPRangeStatus(a.(*allocation.IPRangeStatus), b.(*v1alpha1.IPRangeStatus), scope)
	}); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1alpha1_IPAddress_To_allocation_IPAddress(in *v1alpha1.IPAddress, out *allocation.IPAddress, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha1_IPAddressSpec_To_allocation_IPAddressSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_IPAddressStatus_To_allocation_IPAddressStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_IPAddress_To_allocation_IPAddress is an autogenerated conversion function.
func Convert_v1alpha1_IPAddress_To_allocation_IPAddress(in *v1alpha1.IPAddress, out *allocation.IPAddress, s conversion.Scope) error {
	return autoConvert_v1alpha1_IPAddress_To_allocation_IPAddress(in, out, s)
}

func autoConvert_allocation_IPAddress_To_v1alpha1_IPAddress(in *allocation.IPAddress, out *v1alpha1.IPAddress, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_allocation_IPAddressSpec_To_v1alpha1_IPAddressSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_allocation_IPAddressStatus_To_v1alpha1_IPAddressStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_allocation_IPAddress_To_v1alpha1_IPAddress is an autogenerated conversion function.
func Convert_allocation_IPAddress_To_v1alpha1_IPAddress(in *allocation.IPAddress, out *v1alpha1.IPAddress, s conversion.Scope) error {
	return autoConvert_allocation_IPAddress_To_v1alpha1_IPAddress(in, out, s)
}

func autoConvert_v1alpha1_IPAddressList_To_allocation_IPAddressList(in *v1alpha1.IPAddressList, out *allocation.IPAddressList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]allocation.IPAddress)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_v1alpha1_IPAddressList_To_allocation_IPAddressList is an autogenerated conversion function.
func Convert_v1alpha1_IPAddressList_To_allocation_IPAddressList(in *v1alpha1.IPAddressList, out *allocation.IPAddressList, s conversion.Scope) error {
	return autoConvert_v1alpha1_IPAddressList_To_allocation_IPAddressList(in, out, s)
}

func autoConvert_allocation_IPAddressList_To_v1alpha1_IPAddressList(in *allocation.IPAddressList, out *v1alpha1.IPAddressList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]v1alpha1.IPAddress)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_allocation_IPAddressList_To_v1alpha1_IPAddressList is an autogenerated conversion function.
func Convert_allocation_IPAddressList_To_v1alpha1_IPAddressList(in *allocation.IPAddressList, out *v1alpha1.IPAddressList, s conversion.Scope) error {
	return autoConvert_allocation_IPAddressList_To_v1alpha1_IPAddressList(in, out, s)
}

func autoConvert_v1alpha1_IPAddressSpec_To_allocation_IPAddressSpec(in *v1alpha1.IPAddressSpec, out *allocation.IPAddressSpec, s conversion.Scope) error {
	out.Address = in.Address
	if err := Convert_v1alpha1_IPRangeRef_To_allocation_IPRangeRef(&in.IPRangeRef, &out.IPRangeRef, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_IPAddressSpec_To_allocation_IPAddressSpec is an autogenerated conversion function.
func Convert_v1alpha1_IPAddressSpec_To_allocation_IPAddressSpec(in *v1alpha1.IPAddressSpec, out *allocation.IPAddressSpec, s conversion.Scope) error {
	return autoConvert_v1alpha1_IPAddressSpec_To_allocation_IPAddressSpec(in, out, s)
}

func autoConvert_allocation_IPAddressSpec_To_v1alpha1_IPAddressSpec(in *allocation.IPAddressSpec, out *v1alpha1.IPAddressSpec, s conversion.Scope) error {
	out.Address = in.Address
	if err := Convert_allocation_IPRangeRef_To_v1alpha1_IPRangeRef(&in.IPRangeRef, &out.IPRangeRef, s); err != nil {
		return err
	}
	return nil
}

// Convert_allocation_IPAddressSpec_To_v1alpha1_IPAddressSpec is an autogenerated conversion function.
func Convert_allocation_IPAddressSpec_To_v1alpha1_IPAddressSpec(in *allocation.IPAddressSpec, out *v1alpha1.IPAddressSpec, s conversion.Scope) error {
	return autoConvert_allocation_IPAddressSpec_To_v1alpha1_IPAddressSpec(in, out, s)
}

func autoConvert_v1alpha1_IPAddressStatus_To_allocation_IPAddressStatus(in *v1alpha1.IPAddressStatus, out *allocation.IPAddressStatus, s conversion.Scope) error {
	out.State = allocation.IPAddressState(in.State)
	return nil
}

// Convert_v1alpha1_IPAddressStatus_To_allocation_IPAddressStatus is an autogenerated conversion function.
func Convert_v1alpha1_IPAddressStatus_To_allocation_IPAddressStatus(in *v1alpha1.IPAddressStatus, out *allocation.IPAddressStatus, s conversion.Scope) error {
	return autoConvert_v1alpha1_IPAddressStatus_To_allocation_IPAddressStatus(in, out, s)
}

func autoConvert_allocation_IPAddressStatus_To_v1alpha1_IPAddressStatus(in *allocation.IPAddressStatus, out *v1alpha1.IPAddressStatus, s conversion.Scope) error {
	out.State = v1alpha1.IPAddressState(in.State)
	return nil
}

// Convert_allocation_IPAddressStatus_To_v1alpha1_IPAddressStatus is an autogenerated conversion function.
func Convert_allocation_IPAddressStatus_To_v1alpha1_IPAddressStatus(in *allocation.IPAddressStatus, out *v1alpha1.IPAddressStatus, s conversion.Scope) error {
	return autoConvert_allocation_IPAddressStatus_To_v1alpha1_IPAddressStatus(in, out, s)
}

func autoConvert_v1alpha1_IPRange_To_allocation_IPRange(in *v1alpha1.IPRange, out *allocation.IPRange, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha1_IPRangeSpec_To_allocation_IPRangeSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_IPRangeStatus_To_allocation_IPRangeStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_IPRange_To_allocation_IPRange is an autogenerated conversion function.
func Convert_v1alpha1_IPRange_To_allocation_IPRange(in *v1alpha1.IPRange, out *allocation.IPRange, s conversion.Scope) error {
	return autoConvert_v1alpha1_IPRange_To_allocation_IPRange(in, out, s)
}

func autoConvert_allocation_IPRange_To_v1alpha1_IPRange(in *allocation.IPRange, out *v1alpha1.IPRange, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_allocation_IPRangeSpec_To_v1alpha1_IPRangeSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_allocation_IPRangeStatus_To_v1alpha1_IPRangeStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_allocation_IPRange_To_v1alpha1_IPRange is an autogenerated conversion function.
func Convert_allocation_IPRange_To_v1alpha1_IPRange(in *allocation.IPRange, out *v1alpha1.IPRange, s conversion.Scope) error {
	return autoConvert_allocation_IPRange_To_v1alpha1_IPRange(in, out, s)
}

func autoConvert_v1alpha1_IPRangeList_To_allocation_IPRangeList(in *v1alpha1.IPRangeList, out *allocation.IPRangeList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]allocation.IPRange)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_v1alpha1_IPRangeList_To_allocation_IPRangeList is an autogenerated conversion function.
func Convert_v1alpha1_IPRangeList_To_allocation_IPRangeList(in *v1alpha1.IPRangeList, out *allocation.IPRangeList, s conversion.Scope) error {
	return autoConvert_v1alpha1_IPRangeList_To_allocation_IPRangeList(in, out, s)
}

func autoConvert_allocation_IPRangeList_To_v1alpha1_IPRangeList(in *allocation.IPRangeList, out *v1alpha1.IPRangeList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]v1alpha1.IPRange)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_allocation_IPRangeList_To_v1alpha1_IPRangeList is an autogenerated conversion function.
func Convert_allocation_IPRangeList_To_v1alpha1_IPRangeList(in *allocation.IPRangeList, out *v1alpha1.IPRangeList, s conversion.Scope) error {
	return autoConvert_allocation_IPRangeList_To_v1alpha1_IPRangeList(in, out, s)
}

func autoConvert_v1alpha1_IPRangeRef_To_allocation_IPRangeRef(in *v1alpha1.IPRangeRef, out *allocation.IPRangeRef, s conversion.Scope) error {
	out.APIGroup = in.APIGroup
	out.Kind = in.Kind
	out.Name = in.Name
	return nil
}

// Convert_v1alpha1_IPRangeRef_To_allocation_IPRangeRef is an autogenerated conversion function.
func Convert_v1alpha1_IPRangeRef_To_allocation_IPRangeRef(in *v1alpha1.IPRangeRef, out *allocation.IPRangeRef, s conversion.Scope) error {
	return autoConvert_v1alpha1_IPRangeRef_To_allocation_IPRangeRef(in, out, s)
}

func autoConvert_allocation_IPRangeRef_To_v1alpha1_IPRangeRef(in *allocation.IPRangeRef, out *v1alpha1.IPRangeRef, s conversion.Scope) error {
	out.APIGroup = in.APIGroup
	out.Kind = in.Kind
	out.Name = in.Name
	return nil
}

// Convert_allocation_IPRangeRef_To_v1alpha1_IPRangeRef is an autogenerated conversion function.
func Convert_allocation_IPRangeRef_To_v1alpha1_IPRangeRef(in *allocation.IPRangeRef, out *v1alpha1.IPRangeRef, s conversion.Scope) error {
	return autoConvert_allocation_IPRangeRef_To_v1alpha1_IPRangeRef(in, out, s)
}

func autoConvert_v1alpha1_IPRangeSpec_To_allocation_IPRangeSpec(in *v1alpha1.IPRangeSpec, out *allocation.IPRangeSpec, s conversion.Scope) error {
	out.Range = in.Range
	return nil
}

// Convert_v1alpha1_IPRangeSpec_To_allocation_IPRangeSpec is an autogenerated conversion function.
func Convert_v1alpha1_IPRangeSpec_To_allocation_IPRangeSpec(in *v1alpha1.IPRangeSpec, out *allocation.IPRangeSpec, s conversion.Scope) error {
	return autoConvert_v1alpha1_IPRangeSpec_To_allocation_IPRangeSpec(in, out, s)
}

func autoConvert_allocation_IPRangeSpec_To_v1alpha1_IPRangeSpec(in *allocation.IPRangeSpec, out *v1alpha1.IPRangeSpec, s conversion.Scope) error {
	out.Range = in.Range
	return nil
}

// Convert_allocation_IPRangeSpec_To_v1alpha1_IPRangeSpec is an autogenerated conversion function.
func Convert_allocation_IPRangeSpec_To_v1alpha1_IPRangeSpec(in *allocation.IPRangeSpec, out *v1alpha1.IPRangeSpec, s conversion.Scope) error {
	return autoConvert_allocation_IPRangeSpec_To_v1alpha1_IPRangeSpec(in, out, s)
}

func autoConvert_v1alpha1_IPRangeStatus_To_allocation_IPRangeStatus(in *v1alpha1.IPRangeStatus, out *allocation.IPRangeStatus, s conversion.Scope) error {
	out.Free = in.Free
	return nil
}

// Convert_v1alpha1_IPRangeStatus_To_allocation_IPRangeStatus is an autogenerated conversion function.
func Convert_v1alpha1_IPRangeStatus_To_allocation_IPRangeStatus(in *v1alpha1.IPRangeStatus, out *allocation.IPRangeStatus, s conversion.Scope) error {
	return autoConvert_v1alpha1_IPRangeStatus_To_allocation_IPRangeStatus(in, out, s)
}

func autoConvert_allocation_IPRangeStatus_To_v1alpha1_IPRangeStatus(in *allocation.IPRangeStatus, out *v1alpha1.IPRangeStatus, s conversion.Scope) error {
	out.Free = in.Free
	return nil
}

// Convert_allocation_IPRangeStatus_To_v1alpha1_IPRangeStatus is an autogenerated conversion function.
func Convert_allocation_IPRangeStatus_To_v1alpha1_IPRangeStatus(in *allocation.IPRangeStatus, out *v1alpha1.IPRangeStatus, s conversion.Scope) error {
	return autoConvert_allocation_IPRangeStatus_To_v1alpha1_IPRangeStatus(in, out, s)
}
