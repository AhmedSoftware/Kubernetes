// Code generated by MockGen. DO NOT EDIT.
// Source: internal_container_lifecycle.go

// Package cm is a generated GoMock package.
package cm

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	v1 "k8s.io/api/core/v1"
	v10 "k8s.io/cri-api/pkg/apis/runtime/v1"
)

// MockInternalContainerLifecycle is a mock of InternalContainerLifecycle interface.
type MockInternalContainerLifecycle struct {
	ctrl     *gomock.Controller
	recorder *MockInternalContainerLifecycleMockRecorder
}

// MockInternalContainerLifecycleMockRecorder is the mock recorder for MockInternalContainerLifecycle.
type MockInternalContainerLifecycleMockRecorder struct {
	mock *MockInternalContainerLifecycle
}

// NewMockInternalContainerLifecycle creates a new mock instance.
func NewMockInternalContainerLifecycle(ctrl *gomock.Controller) *MockInternalContainerLifecycle {
	mock := &MockInternalContainerLifecycle{ctrl: ctrl}
	mock.recorder = &MockInternalContainerLifecycleMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockInternalContainerLifecycle) EXPECT() *MockInternalContainerLifecycleMockRecorder {
	return m.recorder
}

// PostStopContainer mocks base method.
func (m *MockInternalContainerLifecycle) PostStopContainer(containerID string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PostStopContainer", containerID)
	ret0, _ := ret[0].(error)
	return ret0
}

// PostStopContainer indicates an expected call of PostStopContainer.
func (mr *MockInternalContainerLifecycleMockRecorder) PostStopContainer(containerID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PostStopContainer", reflect.TypeOf((*MockInternalContainerLifecycle)(nil).PostStopContainer), containerID)
}

// PreCreateContainer mocks base method.
func (m *MockInternalContainerLifecycle) PreCreateContainer(pod *v1.Pod, container *v1.Container, containerConfig *v10.ContainerConfig) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PreCreateContainer", pod, container, containerConfig)
	ret0, _ := ret[0].(error)
	return ret0
}

// PreCreateContainer indicates an expected call of PreCreateContainer.
func (mr *MockInternalContainerLifecycleMockRecorder) PreCreateContainer(pod, container, containerConfig interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PreCreateContainer", reflect.TypeOf((*MockInternalContainerLifecycle)(nil).PreCreateContainer), pod, container, containerConfig)
}

// PreStartContainer mocks base method.
func (m *MockInternalContainerLifecycle) PreStartContainer(pod *v1.Pod, container *v1.Container, containerID string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PreStartContainer", pod, container, containerID)
	ret0, _ := ret[0].(error)
	return ret0
}

// PreStartContainer indicates an expected call of PreStartContainer.
func (mr *MockInternalContainerLifecycleMockRecorder) PreStartContainer(pod, container, containerID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PreStartContainer", reflect.TypeOf((*MockInternalContainerLifecycle)(nil).PreStartContainer), pod, container, containerID)
}

// PreStopContainer mocks base method.
func (m *MockInternalContainerLifecycle) PreStopContainer(containerID string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PreStopContainer", containerID)
	ret0, _ := ret[0].(error)
	return ret0
}

// PreStopContainer indicates an expected call of PreStopContainer.
func (mr *MockInternalContainerLifecycleMockRecorder) PreStopContainer(containerID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PreStopContainer", reflect.TypeOf((*MockInternalContainerLifecycle)(nil).PreStopContainer), containerID)
}
